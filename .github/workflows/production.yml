name: CI

on:
  push:
    branches: [ master ]

  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true
#2
env:
  IMAGE_NAME: "salty-discord-bot"

#3
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ninjomcs/salty-discord-bot:master
        
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    
    steps:
      - name: Deploy to DO Droplet
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          envs: IMAGE_NAME,{{ secrets.DOCKERHUB_USERNAME }},{{ secrets.DOCKERHUB_TOKEN }},GITHUB_SHA,{{ secrets.DISCORD_TOKEN }}
          script: |
            # Login to registry
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            # Stop running container
            docker stop $(echo $IMAGE_NAME)
            # Remove old container
            docker rm $(echo $IMAGE_NAME)
            # Run a new container from a new image
            docker run -d \
            -e DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}
            --restart always \
            --name $(echo $IMAGE_NAME) \
            $(echo ${{ secrets.DOCKERHUB_USERNAME }})/$(echo $IMAGE_NAME):master
